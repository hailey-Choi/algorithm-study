# 출처 : 도서
# 4. 1이 될 때까지

# 1번 조건: N에서 1을 뺀다.
# 2번 조건: N을 K로 나눈다. (N이 K로 나누어떨어질 때만 선택 가능)

# 입력조건: 첫째 줄에 N(2 <= N <= 100,000)과 K(2 <= K <= 100,000)가 공백으로 구분되며 각각 자연수로 주어진다.
#         이때 입력으로 주어지는 N은 항상 K보다 크거나 같다.
# 출력조건 : 첫째 줄에 N이 1이 될 때까지 1번 혹은 2번의 과정을 수행해야 하는 횟수의 최솟값을 출력한다.

# Test case
# Input: 25 5
# Output: 2

# Test case
# Input: 25 3
# Output: 6

n, k = map(int, input().split())
count = 0

# n을 k로 나눌 수 없을때 반복문 탈출
while n >= k:
    # (n == k로 나눠떨어지는 수)일때까지 1씩 빼주기
    if (n % k != 0):
      count += n % k 
      n -= (n%k) 
    # n을 k로 나누기
    if (n % k == 0):
      count += 1
      n = n // k 

# 반복문 탈출 후 남은수가 1이 될때까지 빼주기
count += n - 1 

print(count)
